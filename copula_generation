# %%
import numpy as np
from scipy.stats import multivariate_normal
import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import multivariate_normal, gamma, beta, t
import pandas as pd

from scipy.stats import multivariate_normal, norm

# simulate n features
def simulate_higher_order_copula(correlation_matrix, marginals, n=1000, seed=None):
    # Set random seed for reproducibility
    np.random.seed(seed)

    # Get the number of features from the size of the correlation matrix
    m = len(correlation_matrix)

    # Generate samples from multivariate normal distribution
    Z = multivariate_normal(mean=np.zeros(m), cov=correlation_matrix).rvs(n)

    # Transform samples to uniform marginals
    U = np.clip(np.apply_along_axis(lambda x: multivariate_normal.cdf(x, mean=0, cov=1), 1, Z), 0, 1)

    # Transform uniform marginals to desired marginals
    X = np.column_stack([marginals[i].ppf(U[:, i]) for i in range(len(marginals))])

    return X
